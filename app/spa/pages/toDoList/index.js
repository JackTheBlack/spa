/////////////////////////////imports///////////////////////////
import Head from "next/head";
import { useState, useEffect } from "react";
import axios from "axios";
import { Button, Modal } from "react-bootstrap";
import styles from "../../styles/Home.module.css";
import { useRouter } from "next/router";
import Navbar from "../../components/navbar.js";
import Cookies from "js-cookie";
import {
  MailOutlined,
  AppstoreOutlined,
  SettingOutlined,
} from "@ant-design/icons";

//////////// JS CODE////////////////////////////////////////

export default function ToDoList() {
  const router = useRouter();
  const folder = Cookies.get("folderToken");
  const user = Cookies.get("userToken");
  const [modalIndex, setModalIndex] = useState(null);
  var edit = "";
  const [id, setId] = useState();
  const [toDoList, setToDoList] = useState([]);
  const [aux, setAux] = useState([]);
  const [item, setItem] = useState("");
  const [modal, setModal] = useState(false);
  const goProducts = () => {
    router.push("/home");
  };
  const [modalName, setModalName] = useState("");
  //
  const getTasks = async () => {
    try {
      let payload = { user: user, folder: folder };
      let res = await axios.post("../api/tasks", payload);
      let data = res.data;
      console.log(data);
      setToDoList([...data.data]);
    } catch (e) {
      console.log("fallo");
      console.log(e);
    }
  };

  const handleOnChange = (event) => {
    setItem(event.target.value);
  };
  const handleSubmit = async () => {
    if (item !== "") {
      try {
        let payload = { user: user, folder: folder, task: item };
        let res = await axios.post("../api/addTask", payload);
        let data = res.data;
        console.log(data);
      } catch (e) {
        console.log("fallo");
        console.log(e);
      }
    }
    getTasks();
  }; //
  const handleCancel = () => {
    setModal(!modal);
  };
  ///
  const handleUpdate = async () => {
    var x = toDoList;
    console.log("estoy en el indice ", modalIndex);
    x[modalIndex].task = modalName;
    try {
      let payload = { id: id, task: modalName };
      let res = await axios.post("../api/updateTask", payload);
      let data = res.data;
      console.log(data);
    } catch (e) {
      console.log("fallo");
      console.log(e);
    }
    console.log(x);
    setToDoList([...x]);
    setModal(!modal);
  };

  const handleOnChangeModal = (value) => {
    setModalName(value);
    console.log(modalName);
  };

  const handleChecked = async (e, i, index) => {
    let checked = e.target.checked;
    var x = toDoList;
    try {
      let payload = { done: checked, id: i };
      let res = await axios.post("../api/checkTask", payload);
      let data = res.data;
      console.log(data);
    } catch (e) {
      console.log("fallo");
      console.log(e);
    }
    x[index].done = checked;
    setToDoList([...x]);
  };

  const openModal = (item, ide, i) => {
    setModalIndex(i);
    setId(ide);
    setModalName(item);
    console.log("index =", modalIndex);
    setModal(!modal);
  };

  const handleDelete = async () => {
    try {
      let payload = { id: id };
      let res = await axios.post("../api/deleteTask", payload);
      let data = res.data;
      console.log(data);
      setModal(!modal);
    } catch (e) {
      console.log("fallo");
      console.log(e);
    }
    var aux = toDoList;
    var removed = aux.splice(modalIndex, 1);
    setToDoList([...aux]);
  };

  useEffect(() => {
    getTasks();
  }, []);

  //////////JSX/////////////////////////////////////////////////

  return (
    <div className={styles.container}>
      <Head>
        <title>
          Task List {user}/{folder}{" "}
        </title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1>To Do List</h1>

        <table className="Table">
          <tr>
            <th> </th>
            <th>Task</th>
            <th> </th>
          </tr>

          {toDoList.map((items, index) => (
            <tr key={index}>
              <td>
                {" "}
                <input
                  className="form-check-input"
                  type="checkbox"
                  onChange={(e) => handleChecked(e, items._id, index)}
                  checked={items.done}
                ></input>
              </td>
              <td> {items.task}</td>{" "}
              <td>
                <button
                  className="btn btn-link"
                  onClick={() => openModal(items.task, items._id, index)}
                >
                  Edit
                </button>
              </td>{" "}
            </tr>
          ))}
        </table>

        <p>
          {" "}
          New Item <input
            type="text"
            name="item"
            onChange={handleOnChange}
          />{" "}
        </p>

        <button onClick={() => handleSubmit()}>new item</button>
      </main>

      <Modal show={modal} onHide={handleCancel}>
        <Modal.Header closeButton>
          <Modal.Title>Edit Tast {modalName} </Modal.Title>
        </Modal.Header>
        <Modal.Body>
          {" "}
          <input
            value={modalName}
            onChange={(e) => handleOnChangeModal(e.target.value)}
          ></input>
          <span>{"        "} </span>
          <button
            type="button"
            className="btn btn-danger "
            onClick={() => handleDelete()}
          >
            Delete Task
          </button>
        </Modal.Body>
        <Modal.Footer>
          <Button variant="secondary" onClick={() => handleCancel()}>
            Close
          </Button>
          <Button variant="primary" onClick={() => handleUpdate()}>
            Save Changes
          </Button>
        </Modal.Footer>
      </Modal>
    </div>
  );
}
